# This file was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # Load kernel modules on boot
  boot = {
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
      kernelModules = [ ];
    };
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
  };

  # Mount everything as necessary
  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/f0786b07-8303-416f-87ff-276bfd696387";
      fsType = "bcachefs";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/0BEA-73C3";
      fsType = "vfat";
    };
    "/etc/libvirt" = {
      device = "/dev/disk/by-label/Qemu";
      options = [ "nosuid" "nodev" "nofail" ] ;
    };
    "/var/lib/libvirt" = {
      depends = [ "/etc/libvirt" ];
      device = "/etc/libvirt/varlibvirt";
      options = [ "bind" "rw" ];
    };
    "/mnt/Linux1" = {
      device = "/dev/disk/by-label/Linux1";
      options = [ "nosuid" "nodev" "nofail" "x-gvfs-show" ];
    };
    "/mnt/Linux2" = {
      device = "/dev/disk/by-label/Linux2";
      options = [ "nosuid" "nodev" "nofail" "x-gvfs-show" ];
    };
    "/mnt/Windows1" = {
      device = "/dev/disk/by-label/Windows1";
      options = [ "nosuid" "nodev" "noauto" ];
    };
    "/mnt/Windows2" = {
      device = "/dev/disk/by-label/Windows2";
      options = [ "nosuid" "nodev" "noauto" ];
    };
    "/home/jimbo/JimboNFS" = {
      device = "server:/export/JimboNFS";
      fsType = "nfs";
      options = [ "nofail" ];
    };
    "/home/jimbo/SenecaMount" = {
      device = "//mydrive.senecacollege.ca/courses/";
      fsType = "cifs";
      options = [ "noauto" "username=jhampton1" "workgroup=seneds.senecacollege.ca" "uid=1000" "gid=100" ];
    };
  };

  # Set the swap partition
  swapDevices = [
    { device = "/dev/disk/by-uuid/2e4c5120-716d-4cdc-84a0-c9e6391760db"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. 
  # In case of scripted networking, this is the recommended approach.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
